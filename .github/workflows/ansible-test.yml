# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
      - name: Perform integration testing with ansible-test
        uses: ansible-community/ansible-test-gh-action@release/v1
        with:
          ansible-core-version: stable-2.11
          pre-test-cmd: echo This runs before the ansible-test invocation
          python-version: 3.9
          target-python-version: 3.9
          testing-type: integration
          test-deps: ansible.netcommon
      - name: Perform sanity testing with ansible-test
        uses: ansible-community/ansible-test-gh-action@release/v1
        with:
          ansible-core-version: stable-2.11
          testing-type: sanity
      - name: Perform unit testing with ansible-test
        uses: ansible-community/ansible-test-gh-action@release/v1
        with:
          ansible-core-version: stable-2.11
          pre-test-cmd: echo This runs before the ansible-test invocation
          python-version: 3.9
          target-python-version: 3.9
          testing-type: units
          test-deps: >-
            ansible.netcommon
            ansible.utils

